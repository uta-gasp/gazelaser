<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABuEwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAd0
        SU1FB98KDAc7M6n3O+gAAAAXdEVYdFNvZnR3YXJlAEdMRFBORyB2ZXIgMy40cYWk4QAAAAh0cE5HR0xE
        MwAAAABKgCkfAAAABGdBTUEAALGPC/xhBQAAEttJREFUeJztnX+IVlUax4MgEAQhCIRACAQhEARBCIRA
        iHRm/JWmNPaLsknDsqbMqUlrasqwTM0y7bi5uGvYuuviruRui+0slrtt7srKRu4OBC7uutjOJqtZ4693
        7zP3jr5e3/u+9733nOd57j3fD3z+6IfjvPc5z/e999xzz73mGgAAAAAAAAAAAAAAAAAAAFBgjDHbAys5
        bJf+DACAjCAAAPAYBAAAHoMAAMBjEAAAeAwCAACPQQAA4DEIAAA8BgEAgMcgAADwGAQAAB6DAADAYxAA
        AHgMAgAAj0EAAOAxCAAAPAYBAIDHIAAA8BgEAAAegwAAwGMQAAB4DAIAAI9BAADgMQgAADwGAQCAxyAA
        APAYBAAAHoMAAMBjEAAAeAwCAACPQQAA4DEIAAA8BgEAgMcgAADwGAQAAB6DAADAYxAAAHhM0MBTAjty
        OFb6MwAAAAAAAAAAAAAAAADwCWMMhKoEjEgXuyDeFDgxcKq58rZeb+DmGq6M/X+3RX9+jILPol7AiHSx
        FTnShE36oAkbe0fgwcDzJt/in7iD0c+lRUU9gfdEf+8IBcdAhYAR6WILen3g7MA1gUeM3SbP6uHA1YGt
        gaMUHCMEQNmRLjajI6PGWmXCb2DpZk/jAROejdClhzdnCIAR6WI79loTNv3OwDMNmk27p0x42TBVwXFF
        AJQF6WI7kq6p6dT+RMZm0+5xE57JjFdwrBEARUa62Bala/quwC8sN5t2DwV2mhLNGQBGpIttwRtM+G1/
        iqHZNHvShPMF1yuoCQKgKEgXO4c3Bm4wxb+2ty0FIQXiDQpqhADQjnSxMzgucIsJ76dLN5tmKRgpIG9S
        UDMEgFaki92Eo6IBbXthTtmloKS1BSMV1BABoA3pYqeUVssdV9BMRfZo4FwFtUQAaEK62A28ObBPQfOU
        yb2BYxXUFgGgAeliJ0inq3Taiut8N9L8AD2HoHJ1IWBEutg1vCXwKwVN4oP0DMQEBTVHAEghXeyYtKAF
        3/q80tlAh4LaIwAkkC52JC1e2aOgGXyWnpdQcacAMCJdbBOe8h9V0ADQmH6j4JIAMCJc7GUG9/W1SZdg
        i5nqjwCQRqjI9Jju5hSD8YCChvDVNQ7rjwDQgkCB6dbTrgaDr3rRyhoFzeCr2wKvs1x/BIAmmItLy3n7
        Ggw6es69ejKKBuBnCprBV2nhEOt6AcAIY2FHm/DZ9aSBNmDC3Xtq/Vl6oOWkgmbwVboUY3vMGDDCVFRa
        elpvcQ8NsEZbZs9W0Ag++0WKGiEAigZDQW8MPFZnYDVznblBQSP4bL9h2GcAMOK4mDRY6m3R1exMMwVF
        vcsI6F7aUdnp9mOAEYeFpImjepN3yzL+XNoQBPMBsu4zDu8OAEYcFZEGR72lvXnXns9X0AS+S29OujZn
        HREA0rgooAn3r08aOFm/+eOmWUgE3brRUi0RAFI4KOCqOgOm1+LfQ5cYhxU0ge92WawpAoAby8WbW2eg
        uPi2oPkA37cDl5ae5bD6tiLAiMXC1VusQ/MBTq4XTbhfoHQT+C69gWm0rZoCRiwVjSb9kl64SbvOuH5r
        zVYFTeC7fcZSyANGbBTMJC/QoTOCcZb+jnrSfIBvrwTTqJU5HsCIhYIlLdGla8Oktf0upB2E8ZYgWanm
        t+WtJWAkZ7HqXffbnPFP64MKmsB3c88HAEbyFMqEj4rWGgS0ApD9OfLIbQqawHd35KkhYCRHodoTik+3
        5SRfPEF7CRxR0AS+m/nyDzCSo8mSnvBbkrXwFqWNLbG9uKz9JuNZIGAkY4OtTij6/ow/z4VLFDSB73Zn
        qR1gJEOB6Nu11k6+9I3LccuvGZPmKCCPNCaavhwEjGRoqv0JxV6V4We5lvYjwFuFZd3TbN0AI00WJ2ni
        j+YDVLxVpoZTDN49IG1TE4KAkSYKQxM6Sfv6tTdTYAF7FTSBz9JTm6mXCQNGmmiijoTiHmziZ0hJgy/p
        0gXyOD9tvQAjKYtC3/5Jt/1mpy2ssLSj7YCCRvBVWpuR6iwAMJKyeZK+/Q+l/PNanKGgEXw21VkAYCRF
        QSi1k560K8q3f7XYSkzOz9LUCDCSoiBJ35pF+/Yflh4dxlJhOW9tVCPASIqG6UsoJDUR7cYj9dBPHrFU
        WM7djeoDGGlQjJtTFJQe/+wxDG+MsWyXgmbwUVqTUfcVY4CRBk2yronC0jcqPYo7qcHP1CLNbRxodgD/
        6K23KntfeqnySVdX5ctFiyp/6+iofD1//hX+/aGHhv7bp8uXV3714ouVH2/YIN102uypVxvASJ1C0LVy
        1ttmNNlzj3G3EagNJ5r6Lyy95C9WraocXrKk8t+5cyuV22/P5Ddz5lT++sgjlQ97e6WbT4PH6o0NwEid
        Bqm3xXdaaR1+t9F3eXC/aTAH8MONGyufd3ZW/jdrVuamT/L0zJkX/7x0aWXb229LN6KkU5LqAxip0yQ7
        LBZ7+PJgosOmTuvKer/rDzZvrhx4+unK921tF203ftzvW1sv/vHJJyvvbdok3YwSbk6qEWAkoQh0+u9q
        g01akksLQiQuD+q9tajS191dOTVrlvPGj3tmxowL+595prLl3Xelm5LTgaQxABhJaBSOl29yXx4kfvO/
        v3790OQdd+PHpTmGD9aulW5MTmu+UQgwktAs9V7uaVs609hiwnvzrpo/6THmyi9feaXy7YwZ4s0/7GBw
        WUB3GRQ0J4c1XxcHGKlRADotk3poxsXlQeKiH7qVd37qVPGmj3shkOYGFDSoa48iAISpUYDJCgaGrcuD
        mm8Momttuk8v3eiN7F+4cGhSUkE9XDoeASBIjabpUTAohs27uKjmpB8t3pFu7rR+9cADZZ8cXIoAEKRG
        0+xTMChqSYuLmrk8oA1Krzr1P/TYY+JN3axfLF4sfexdugsBIEjs4FNzaX+/XtrLg13xP/vxihXizZxV
        mq9QcOxdeAIBIEjs4E9SMCDSWu/yYGL8///JG29Uzra0iDdyVmmy8uerV0sfc1desXU4YCTWOJ0KBkMW
        h589GH40+Yr3A9I19H/mzRNv4ryevOOOsk4K3o8AECIWAFsVDIY80ukkTfxdce1Pp8/SzWvLkt4eXIcA
        ECIWAIcUDAar0uO7g62t4o1rS7oUoJWL0sfVsvsQAEJUHXiaACzdLjlFnPVvZAnvClwxEQgYqTrwaXb/
        KZT0uG2RJ/7qnQVsf/NN8eNr2RsRAAJUBUDptsz+w1NPiTerK2k/Aenja9nJCAABqgKgdK/TzrODj3ZP
        zZpVthWC95QuAIIPM8qE96Q1OSH2Ow67RsEgsCbdM5duUtfuefll8eNs0ZUmFgCmAP3TKABaFRzYuCcT
        AuCqlXNFlm6XSTeoa//y6KPix9miW83VAaC+f8oUAE3vkKvZ4+3t4g3q2oE77xQ/zhbdaxAA/B/AXA6A
        0rwth1bLnZs2TbxBXUv7BtDmpdLH25KXXhtWpP4pUwCcUPC7WXHnmjXizcnl7ldfFT/eluw3CAD+D2Au
        B8B5Bb+bFX/z/PPijcklbSYqfbwtOWAQAPwfIDroIxX8XtYs8/3/uCVaDzBoEAD8HyA66KMU/F7WLOPy
        3yRLtiwYAcD9AaKDPlrB72VNegWXdGNySfsGSh9viw49zl2k/ilLAIxR8HtZ88jDD4s3Jpe0Z6D08bYo
        nYkWqn8QAAr16QyA3kQsfbwtigDg/gAmDIAbFPxe1qSJMenG5LJkcwBDG74WqX/KEgClmgT8/bJl4o3J
        5Z8ef1z8eFsUk4DcH8CU8Dbgr3t6xBuTy98+95z48bYkbgNKfABTwoVAWAlYSC/tClSk/ilTAJRmKTA9
        J49nAQrnEVPCAKBdTg4qsy8hAK56h16RPXrffeIN6tp/33WX+HG26AFzdQCo75/CYy4HQJ+CQWBNH/YD
        oBWP0sfZortNLAAAA1UBsFPBILDmT19/XbxBXVui639yMwJAgKoAWK1gEFi1DG8DSvKbOXPEj69luxEA
        AlQFwGIFg8Cqny5fLt6orvy8s1P8+Fq2HQEgQFUATFUwCKy69Z13KmemTxdvVtsOtrQMvfFI+vha9hYE
        gABVATBOwSCwbhknA0u2Geiwl173DhipCgBah31KwUCwKp0FfNfWJt60tjzb0nKxhN/+x6vGoXRL+EX1
        gTfhxozSg8G6tG2WdOPaknY7kj6eDvwIASBELAC2KBgMTvzXggXizZvXE/Pnl+1tQMOuRgAIEQuA0t0J
        GJZepnlm+vSL0k2c1cHW1gsfrF0rfhwdOR8BIEQsACYoGAzO/LC3d2j9vHQzZ5F2OpY+fg4dgwAQIhYA
        NBF4UsGAcGYR1wYcfOIJ8ePm0GOxMSjdEn4RP/gmfEWT9KBwKm2iId3UaaXtzaSPl2N3IAAEqREAXQoG
        hXOLsG2YB81PLkYACFIjAMYrGBQsftLVpXZOgBYwSR8fJq+4/kcAMFMjAMijCgYGizQx+O306RekG37Y
        wdbWc7SlmfRxYfJwrfEHGEkIgI0KBgebtLLuH/fee166+Y+3t599f/168ePB6Kpa4w8wUqsARudWTM79
        6IUXKqdnzjzL3fjftbUNfrxihfjnF3ByrfEHGKlVABO+omlAwQBh971Nm4aW237f1uY8CM62tJyjW3z0
        vIL05xaQLjOvNQgAWWoVIHKrgkEiGgS/e/ZZ2nfvjO3G/3revNM0Aelp4w+7ziSMPcBIUhFMCfcHyCpd
        l9NZwbG77/72XEvLYLMNf27atLP/XLDgNM3sl3g5b7Neev4/LmAkqQgmPD07pmCgqJP2G6T5AgqFLxct
        GrJ/4cKBwK+H/5manZbv/uy118R/X4Ve2gK8loCReoUI7FEwWGD57DQIAB3UK4QJF2mU5o1BUIVnTNXu
        P7UEjNQrRORuBYMGlsdtpsGYA4w0KkbgrQoGDSyP9Mg5AkALjYoReUjBwIHFd59JMd4AI2kKYsIdW6QH
        Dyy+dGsZAaCJNAUx4S3BIwoGECyu9GLNVOMNMJK2KAZnATCfqb79DQKAl7RFMeFZwGEFAwkWz0uv/k4j
        YKSZwhhPnxKEua351F+SgJFmChO5T8GAgsVxl2lyjAFGmi2OCe/jYnUgTONg4FiDANBLs8WJ9GrHIJjZ
        mjv+NBIwkqVAgaMMnhSE9e0PHGkQALrJUqDI2QoGGdTrFJNxbAFGshYpcpeCgQb1udXkGFeAkTyFMuFj
        nccVDDiox69MeImIACgCeQoVSad6uCsASZr1n2hyjinASN5iRXYrGHxQ3iXGwngCjNgomAmXCWOBkN82
        veAnScCIraIZzAf4bO7r/moBI7aKFon5AP+k6/5JxuI4AozYLFzkMgWDEvL5oLE8hgAjtosXuUrBwITu
        7UqoPwKgKLgoYOR2BQMUunNjg/ojAIqAqyKa8M4AthQvp9tT1B8BUARcFjJwROBnCgYstCfd7r0uZf0R
        ANpxWcjI6w22EiuLFOaZnvBrRsCI62JGjjbhrrDSAxhmd78Jw9z5eAGMcBQ0kr45sFqwmNJczoic9UcA
        aISrqJF07bhDwYCG6d1iwgldtnECGOEsbJUbFAxs2NheR/VHAGhBosCR3QoGOEx2qcPaIwC0IFXkyPbA
        UwoGO7zsycAZTPVHAEgjWehI2jYabx/WIb3BZwxz/REAkkgXO5JmmLHVuKyrjeMFPmkFjEgXO+Zcg0sC
        bgdM+Mo36dojACSQLnYNcUnAJy3uET/ljwsYkS52gnTfmR41PaOgScoonWWJzfI3EjAiXewG0tkAVg/a
        dY9R+K1fLWBEutgppduFRxU0T5HtN8K399IKGJEudhPSnYJug0nCZqX7+p1GyQx/GgEj0sXOID2RttKE
        s9fSzaXZEybcn9Habr1cAkaki51DerqwMxro0s2mSXprM72gg+3pPdsCRqSLbcER0YD3/XXltDd/hynQ
        qX6SgBHpYluUBj5NFvYxNJsm95pwARXrI7suBYxIF9uRdPuQtiYv61kB3RHpMcpv52UVMCJdbAYnB64z
        xX9tGYUZrde3+hYejQJGpIvN7DgTzhfQiyy130Wgyc2dJryuH6vg2CEAyoh0sYWdYMJbZbQ6Tnp9AQUS
        7b1HdzbGKTg2CAAfkC62Mm8y4Wq5bhPuhUc7GdueRzga/dzNJnzegZ7EK+W1fFYBI9LFLpB0tjAxkuYV
        OqqkB2uooZfE/v2kqj8zXsFnKISAEeliQxgXAAAAAAAAAACQxoSvxc5zB6Bd+jMAADKCAADAYxAAAHgM
        AgAAj0EAAOAxCAAAPAYBAIDHIAAA8BgEAAAegwAAwGMQAAB4DAIAAI9BAADgMQgAADwGAQCAxyAAAPAY
        BAAAHoMAAMBjEAAAeAwCAACPQQAA4DEIAAA8BgEAgMcgAADwGAQAAB6DAADAYxAAAHgMAgAAj0EAAOAx
        CAAAPAYBAIDHIAAA8BgEAAAegwAAwGMQAAB4DAIAAI9BAADgMUEDTwnsyOFY6c8AAAAAAABs8H9XUZsQ
        9cculwAAAABJRU5ErkJggg==
</value>
  </data>
</root>